// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/datetime.proto

#ifndef PROTOBUF_google_2fprotobuf_2fdatetime_2eproto__INCLUDED
#define PROTOBUF_google_2fprotobuf_2fdatetime_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2007000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_google_2fprotobuf_2fdatetime_2eproto();
void protobuf_AssignDesc_google_2fprotobuf_2fdatetime_2eproto();
void protobuf_ShutdownFile_google_2fprotobuf_2fdatetime_2eproto();

class DateTime;

enum TimeSpanScale {
  DAYS = 0,
  HOURS = 1,
  MINUTES = 2,
  SECONDS = 3,
  MILLISECONDS = 4,
  TICKS = 5,
  MINMAX = 15,
  TimeSpanScale_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  TimeSpanScale_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOBUF_EXPORT bool TimeSpanScale_IsValid(int value);
const TimeSpanScale TimeSpanScale_MIN = DAYS;
const TimeSpanScale TimeSpanScale_MAX = MINMAX;
const int TimeSpanScale_ARRAYSIZE = TimeSpanScale_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* TimeSpanScale_descriptor();
inline const ::std::string& TimeSpanScale_Name(TimeSpanScale value) {
  return ::google::protobuf::internal::NameOfEnum(
    TimeSpanScale_descriptor(), value);
}
inline bool TimeSpanScale_Parse(
    const ::std::string& name, TimeSpanScale* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TimeSpanScale>(
    TimeSpanScale_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOBUF_EXPORT DateTime : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:google.protobuf.DateTime) */ {
 public:
  DateTime();
  virtual ~DateTime();

  DateTime(const DateTime& from);

  inline DateTime& operator=(const DateTime& from) {
    CopyFrom(from);
    return *this;
  }

  inline ::google::protobuf::Arena* GetArena() const { return GetArenaNoVirtual(); }
  inline void* GetMaybeArenaPointer() const {
    return MaybeArenaPtr();
  }
  static const ::google::protobuf::Descriptor* descriptor();
  static const DateTime& default_instance();

  void UnsafeArenaSwap(DateTime* other);
  void Swap(DateTime* other);

  // implements Message ----------------------------------------------

  inline DateTime* New() const { return New(NULL); }

  DateTime* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DateTime& from);
  void MergeFrom(const DateTime& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(DateTime* other);
  protected:
  explicit DateTime(::google::protobuf::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::google::protobuf::Arena* arena);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional sint64 value = 1;
  void clear_value();
  static const int kValueFieldNumber = 1;
  ::google::protobuf::int64 value() const;
  void set_value(::google::protobuf::int64 value);

  // optional .google.protobuf.TimeSpanScale scale = 2;
  void clear_scale();
  static const int kScaleFieldNumber = 2;
  ::google::protobuf::TimeSpanScale scale() const;
  void set_scale(::google::protobuf::TimeSpanScale value);

  // @@protoc_insertion_point(class_scope:google.protobuf.DateTime)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  friend class ::google::protobuf::Arena;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool _is_default_instance_;
  ::google::protobuf::int64 value_;
  int scale_;
  mutable int _cached_size_;
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_google_2fprotobuf_2fdatetime_2eproto();
  friend void protobuf_AssignDesc_google_2fprotobuf_2fdatetime_2eproto();
  friend void protobuf_ShutdownFile_google_2fprotobuf_2fdatetime_2eproto();

  void InitAsDefaultInstance();
  static DateTime* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// DateTime

// optional sint64 value = 1;
inline void DateTime::clear_value() {
  value_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DateTime::value() const {
  // @@protoc_insertion_point(field_get:google.protobuf.DateTime.value)
  return value_;
}
inline void DateTime::set_value(::google::protobuf::int64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.DateTime.value)
}

// optional .google.protobuf.TimeSpanScale scale = 2;
inline void DateTime::clear_scale() {
  scale_ = 0;
}
inline ::google::protobuf::TimeSpanScale DateTime::scale() const {
  // @@protoc_insertion_point(field_get:google.protobuf.DateTime.scale)
  return static_cast< ::google::protobuf::TimeSpanScale >(scale_);
}
inline void DateTime::set_scale(::google::protobuf::TimeSpanScale value) {
  
  scale_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.DateTime.scale)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::google::protobuf::TimeSpanScale> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::google::protobuf::TimeSpanScale>() {
  return ::google::protobuf::TimeSpanScale_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_google_2fprotobuf_2fdatetime_2eproto__INCLUDED
