// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/decimal.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include <google/protobuf/decimal.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* Decimal_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Decimal_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_google_2fprotobuf_2fdecimal_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_google_2fprotobuf_2fdecimal_2eproto() {
  protobuf_AddDesc_google_2fprotobuf_2fdecimal_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "google/protobuf/decimal.proto");
  GOOGLE_CHECK(file != NULL);
  Decimal_descriptor_ = file->message_type(0);
  static const int Decimal_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal, low_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal, high_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal, signscale_),
  };
  Decimal_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Decimal_descriptor_,
      Decimal::default_instance_,
      Decimal_offsets_,
      -1,
      -1,
      -1,
      sizeof(Decimal),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Decimal, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_google_2fprotobuf_2fdecimal_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Decimal_descriptor_, &Decimal::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_google_2fprotobuf_2fdecimal_2eproto() {
  delete Decimal::default_instance_;
  delete Decimal_reflection_;
}

void protobuf_AddDesc_google_2fprotobuf_2fdecimal_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_google_2fprotobuf_2fdecimal_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035google/protobuf/decimal.proto\022\017google."
    "protobuf\"7\n\007Decimal\022\013\n\003low\030\001 \001(\004\022\014\n\004high"
    "\030\002 \001(\r\022\021\n\tsignScale\030\003 \001(\rB}\n\023com.google."
    "protobufB\014DecimalProtoP\001Z)github.com/gol"
    "ang/protobuf/ptypes/decimal\240\001\001\370\001\001\242\002\003GPB\252"
    "\002\036Google.Protobuf.WellKnownTypesb\006proto3", 240);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/decimal.proto", &protobuf_RegisterTypes);
  Decimal::default_instance_ = new Decimal();
  Decimal::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_google_2fprotobuf_2fdecimal_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_google_2fprotobuf_2fdecimal_2eproto {
  StaticDescriptorInitializer_google_2fprotobuf_2fdecimal_2eproto() {
    protobuf_AddDesc_google_2fprotobuf_2fdecimal_2eproto();
  }
} static_descriptor_initializer_google_2fprotobuf_2fdecimal_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Decimal::kLowFieldNumber;
const int Decimal::kHighFieldNumber;
const int Decimal::kSignScaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Decimal::Decimal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.Decimal)
}

Decimal::Decimal(::google::protobuf::Arena* arena)
  : ::google::protobuf::Message(),
  _internal_metadata_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:google.protobuf.Decimal)
}

void Decimal::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Decimal::Decimal(const Decimal& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.Decimal)
}

void Decimal::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  low_ = GOOGLE_ULONGLONG(0);
  high_ = 0u;
  signscale_ = 0u;
}

Decimal::~Decimal() {
  // @@protoc_insertion_point(destructor:google.protobuf.Decimal)
  SharedDtor();
}

void Decimal::SharedDtor() {
  if (GetArenaNoVirtual() != NULL) {
    return;
  }

  if (this != default_instance_) {
  }
}

void Decimal::ArenaDtor(void* object) {
  Decimal* _this = reinterpret_cast< Decimal* >(object);
  (void)_this;
}
void Decimal::RegisterArenaDtor(::google::protobuf::Arena* arena) {
}
void Decimal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Decimal::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Decimal_descriptor_;
}

const Decimal& Decimal::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_google_2fprotobuf_2fdecimal_2eproto();
  return *default_instance_;
}

Decimal* Decimal::default_instance_ = NULL;

Decimal* Decimal::New(::google::protobuf::Arena* arena) const {
  return ::google::protobuf::Arena::CreateMessage<Decimal>(arena);
}

void Decimal::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.Decimal)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(Decimal, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Decimal*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(low_, signscale_);

#undef ZR_HELPER_
#undef ZR_

}

bool Decimal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.Decimal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 low = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &low_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_high;
        break;
      }

      // optional uint32 high = 2;
      case 2: {
        if (tag == 16) {
         parse_high:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &high_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_signScale;
        break;
      }

      // optional uint32 signScale = 3;
      case 3: {
        if (tag == 24) {
         parse_signScale:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signscale_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.Decimal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.Decimal)
  return false;
#undef DO_
}

void Decimal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.Decimal)
  // optional uint64 low = 1;
  if (this->low() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->low(), output);
  }

  // optional uint32 high = 2;
  if (this->high() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->high(), output);
  }

  // optional uint32 signScale = 3;
  if (this->signscale() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->signscale(), output);
  }

  // @@protoc_insertion_point(serialize_end:google.protobuf.Decimal)
}

::google::protobuf::uint8* Decimal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.Decimal)
  // optional uint64 low = 1;
  if (this->low() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->low(), target);
  }

  // optional uint32 high = 2;
  if (this->high() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->high(), target);
  }

  // optional uint32 signScale = 3;
  if (this->signscale() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->signscale(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.Decimal)
  return target;
}

int Decimal::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.Decimal)
  int total_size = 0;

  // optional uint64 low = 1;
  if (this->low() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->low());
  }

  // optional uint32 high = 2;
  if (this->high() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->high());
  }

  // optional uint32 signScale = 3;
  if (this->signscale() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->signscale());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Decimal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.Decimal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const Decimal* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Decimal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.Decimal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.Decimal)
    MergeFrom(*source);
  }
}

void Decimal::MergeFrom(const Decimal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.Decimal)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.low() != 0) {
    set_low(from.low());
  }
  if (from.high() != 0) {
    set_high(from.high());
  }
  if (from.signscale() != 0) {
    set_signscale(from.signscale());
  }
}

void Decimal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Decimal::CopyFrom(const Decimal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.Decimal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Decimal::IsInitialized() const {

  return true;
}

void Decimal::Swap(Decimal* other) {
  if (other == this) return;
  if (GetArenaNoVirtual() == other->GetArenaNoVirtual()) {
    InternalSwap(other);
  } else {
    Decimal temp;
    temp.MergeFrom(*this);
    CopyFrom(*other);
    other->CopyFrom(temp);
  }
}
void Decimal::UnsafeArenaSwap(Decimal* other) {
  if (other == this) return;
  GOOGLE_DCHECK(GetArenaNoVirtual() == other->GetArenaNoVirtual());
  InternalSwap(other);
}
void Decimal::InternalSwap(Decimal* other) {
  std::swap(low_, other->low_);
  std::swap(high_, other->high_);
  std::swap(signscale_, other->signscale_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Decimal::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Decimal_descriptor_;
  metadata.reflection = Decimal_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Decimal

// optional uint64 low = 1;
void Decimal::clear_low() {
  low_ = GOOGLE_ULONGLONG(0);
}
 ::google::protobuf::uint64 Decimal::low() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Decimal.low)
  return low_;
}
 void Decimal::set_low(::google::protobuf::uint64 value) {
  
  low_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Decimal.low)
}

// optional uint32 high = 2;
void Decimal::clear_high() {
  high_ = 0u;
}
 ::google::protobuf::uint32 Decimal::high() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Decimal.high)
  return high_;
}
 void Decimal::set_high(::google::protobuf::uint32 value) {
  
  high_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Decimal.high)
}

// optional uint32 signScale = 3;
void Decimal::clear_signscale() {
  signscale_ = 0u;
}
 ::google::protobuf::uint32 Decimal::signscale() const {
  // @@protoc_insertion_point(field_get:google.protobuf.Decimal.signScale)
  return signscale_;
}
 void Decimal::set_signscale(::google::protobuf::uint32 value) {
  
  signscale_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.Decimal.signScale)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
